1608743677110:library(dplyr)
1608743681196:# library(jsonlite::fromJSON)
1608743681203:source("opendata.R")
1608743733985:library(dplyr)
1608743734529:# library(jsonlite::fromJSON)
1608743734536:source("opendata.R")
1608743739933:# list of apis
1608743739939:openlist <-plist()
1608743741187:stopifnot(openlist$success)
1608743741550:length(openlist$result) # [1] 7828
1608743753738:# Todesfälle
1608743753745:####################
1608743753750:pivot.slug <- "todesf.*lle.*alter.*kanton.*csv"
1608743756131:pivot.formats <- c('CSV')
1608743757324:pivot.lang <- 'de'
1608743758202:pivot.year <- 2020
1608743763103:# give list of all apis with pivot.slug
1608743763109:openlist$result[grepl(pivot.slug, openlist$result)]
1608743854932:# give all meta information of one api
1608743854941:pshow('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608743874780:# give selected metadata of apis with pivot.slug
1608743874788:ptable('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33') %>%
1608743874795:filter(language=='de') %>% t
1608743908923:# give selected download urls of apis with pivot.slug
1608743908930:papi('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608743928031:# return table of metadata and api
1608743928039:myapis <- apimeta(pivot.slug, pivot.formats, pivot.lang) %>%
1608743928045:mutate(pivot = if_else(pivot.year>=substr(start_date,0,4) &
1608743928051:pivot.year<=substr(end_date,0,4),'PIVOT','NOPI')) %>%
1608743928056:split(.$pivot)
1608743933351:glimpse(myapis)
1608743976819:# select url for the pivot year
1608743976826:myapis$PIVOT %>%
1608743976834:transmute(id = substring(id,70), download_url)
1608802978525:library(dplyr)
1608802979125:# library(jsonlite::fromJSON)
1608802979131:source("opendata.R")
1608802980474:# list of apis
1608802980482:openlist <-plist()
1608802982430:stopifnot(openlist$success)
1608802984661:length(openlist$result) # [1] 7913
1608803217469:# library(jsonlite::fromJSON)
1608803217478:source("opendata.R")
1608803238532:# Todesfälle
1608803238540:####################
1608803238545:pivot.slug <- "todesf.*lle.*alter.*kanton.*csv"
1608803240276:pivot.formats <- c('CSV')
1608803240500:pivot.lang <- 'de'
1608803240908:pivot.year <- 2020
1608803241784:# give list of all apis with pivot.slug
1608803241792:openlist$result[grepl(pivot.slug, openlist$result)]
1608803271893:# give all meta information of one api
1608803271901:pshow('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608803289028:# library(jsonlite::fromJSON)
1608803289036:source("opendata.R")
1608803293543:# give all meta information of one api
1608803293551:pshow('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608804016214:library(dplyr)
1608804018096:# list of apis
1608804018104:openlist <- jsonlite::fromJSON('https://opendata.swiss/api/3/action/package_list')
1608804021244:stopifnot(openlist$success)
1608804175557:# shows one dataset by id (slug)
1608804175565:pshow <- function(id) {
1608804175571:##  "curl 'https://opendata.swiss/api/3/action/package_show?id=studierende-fachhochschule-anz'"
1608804175575:myurl <- "https://opendata.swiss/api/3/action/package_show"
1608804175584:res <- jsonlite::fromJSON(paste0(myurl,'?id=', id))
1608804175588:stopifnot(res$success)
1608804175593:return(res)
1608804175597:}
1608804469695:pivot.slug <- "todesf.*lle.*alter.*kanton.*csv"
1608804472352:# give list of all apis with pivot.slug
1608804472360:openlist$result[grepl(pivot.slug, openlist$result)]
1608804500870:pivot.slug <- "todesf.*lle.*alter.*kanton"
1608804501975:# give list of all apis with pivot.slug
1608804501983:openlist$result[grepl(pivot.slug, openlist$result)]
1608804528182:pivot.slug <- "todesf.*lle.*alter.*kanton.*csv"
1608804528677:# give list of all apis with pivot.slug
1608804528686:openlist$result[grepl(pivot.slug, openlist$result)]
1608804667789:# give list of all ids
1608804667796:pivot.slug <- "todesf.*lle.*alter.*kanton.*csv"
1608804668339:idlist <- openlist$result[grepl(pivot.slug, openlist$result)]
1608804987578:# download metadata and urls
1608804987586:yy <- lapply(idlist, pshow)
1608805017338:yy
1608805033707:yy[[1]]
1608805670262:pdown <- function(id) {
1608805670272:myurl <- "https://opendata.swiss/api/3/action/package_show"
1608805670280:curl::curl_download(paste0(myurl,'?id=', id), id)
1608805670287:}
1608805690322:lapply(idlist, pdown)
1608806004967:# list of all apis
1608806004976:openlist <- jsonlite::fromJSON('https://opendata.swiss/api/3/action/package_list')
1608806008789:stopifnot(openlist$success)
1608806017032:# give list of all ids
1608806017040:pivot.slug <- "todesf.*lle.*alter.*kanton.*csv"
1608806018314:idlist <- openlist$result[grepl(pivot.slug, openlist$result)]
1608806022381:# download datasets (metadata and urls) by id (slug)
1608806022389:pdown <- function(id) {
1608806022396:myurl <- "https://opendata.swiss/api/3/action/package_show"
1608806022402:curl::curl_download(paste0(myurl,'?id=', id), id)
1608806022407:}
1608806028350:lapply(idlist, pdown)
1608806214963:library(dplyr)
1608806215586:# library(jsonlite::fromJSON)
1608806215594:source("CopyOfopendata.R")
1608806243009:View(pshow)
1608806425217:# shows one dataset by id (slug)
1608806425226:pshow <- function(id) {
1608806425233:res <- jsonlite::fromJSON(id)
1608806425239:stopifnot(res$success)
1608806425257:return(res)
1608806425266:}
1608806432015:# give all meta information of one api
1608806432023:pshow('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608806435843:# give selected metadata of apis with pivot.slug
1608806435851:ptable('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33') %>%
1608806435858:filter(language=='de') %>% t
1608806449845:# give selected download urls of apis with pivot.slug
1608806449851:papi('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608806457974:# return table of metadata and api
1608806457983:myapis <- apimeta(pivot.slug, pivot.formats, pivot.lang) %>%
1608806457991:mutate(pivot = if_else(pivot.year>=substr(start_date,0,4) &
1608806457997:pivot.year<=substr(end_date,0,4),'PIVOT','NOPI')) %>%
1608806458002:split(.$pivot)
1608806474561:# select url for the pivot year
1608806474569:myapis$PIVOT %>%
1608806474577:transmute(id = substring(id,70), download_url)
1608806480438:# give selected download urls of apis with pivot.slug
1608806480447:papi('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608806520599:# give selected download urls of apis with pivot.slug
1608806520607:papi('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')$url
1608806659229:library(dplyr)
1608806661757:# shows one dataset by id (slug)
1608806661765:pshow <- function(id) {
1608806661771:res <- jsonlite::fromJSON(id)
1608806661777:stopifnot(res$success)
1608806661782:return(res)
1608806661788:}
1608806663095:# give all meta information of one api
1608806663103:pshow('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608806666426:# shows selected metadata in a table
1608806666435:ptable <- function(id) {
1608806666441:rest_api <- pshow(id)
1608806666448:stopifnot(rest_api$success)
1608806666456:as.na <- function(cell) {
1608806666462:ifelse(is.null(cell), NA, cell)
1608806666466:}
1608806666475:r <- rest_api$result
1608806666480:api_desc <- tibble(id=id,
1608806666485:issued=r$issued,
1608806666491:author=r$author,
1608806666496:language=r$language,
1608806666501:spatial=as.na(r$spatial),
1608806666512:metadata_created=r$metadata_created,
1608806666519:metadata_modified=r$metadata_modified,
1608806666525:start_date=as.na(r$temporals$start_date),
1608806666530:end_date=as.na(r$temporals$end_date),
1608806666535:display_name=r$display_name$de,
1608806666540:state=r$state,
1608806666545:format=paste(sort(unique(r$resources$format)),collapse = ','))
1608806666555:return(api_desc)
1608806666560:}
1608806668624:# give selected metadata of apis with pivot.slug
1608806668632:ptable('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33') %>%
1608806668639:filter(language=='de') %>% t
1608806676561:# shows selected api data in a table
1608806676570:papi <- function(id, formats=c('CSV'), language='de') {
1608806676577:rest_api <- pshow(id)
1608806676583:stopifnot(rest_api$success)
1608806676592:as.na <- function(cell) {
1608806676597:ifelse(is.null(cell), NA, cell)
1608806676602:}
1608806676610:r <- filter(rest_api$result$resources, format %in% formats)
1608806676615:#return(r)
1608806676620:api_desc <- tibble(id=id,
1608806676625:issued=r$issued,
1608806676630:display_name=unlist(r$display_name[language]),
1608806676639:language=unlist(r$language),
1608806676645:created=r$created,
1608806676651:format=r$format,
1608806676657:rights=r$rights,
1608806676663:state=r$state,
1608806676668:url=r$url,
1608806676673:download_url=r$download_url,
1608806676678:revision_id=r$revision_id)
1608806676687:return(api_desc)
1608806676692:}
1608806677618:# give selected download urls of apis with pivot.slug
1608806677625:papi('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608806707038:# give selected metadata of apis with pivot.slug
1608806707045:ptable('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33') %>%
1608806707053:filter(language=='de') %>% t
1608806760774:# give selected download urls of apis with pivot.slug
1608806760782:papi('todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33')
1608806906581:library(dplyr)
1608806908179:myid <- 'todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33'
1608806913080:# shows one dataset by id (slug)
1608806913087:pshow <- function(id) {
1608806913094:res <- jsonlite::fromJSON(id)
1608806913100:stopifnot(res$success)
1608806913107:return(res)
1608806913113:}
1608806915309:# give all meta information of one api
1608806915316:pshow(myid)
1608806917213:# shows selected metadata in a table
1608806917221:ptable <- function(id) {
1608806917228:rest_api <- pshow(id)
1608806917235:stopifnot(rest_api$success)
1608806917243:as.na <- function(cell) {
1608806917248:ifelse(is.null(cell), NA, cell)
1608806917253:}
1608806917262:r <- rest_api$result
1608806917267:api_desc <- tibble(id=id,
1608806917272:issued=r$issued,
1608806917277:author=r$author,
1608806917282:language=r$language,
1608806917287:spatial=as.na(r$spatial),
1608806917291:metadata_created=r$metadata_created,
1608806917296:metadata_modified=r$metadata_modified,
1608806917301:start_date=as.na(r$temporals$start_date),
1608806917306:end_date=as.na(r$temporals$end_date),
1608806917310:display_name=r$display_name$de,
1608806917314:state=r$state,
1608806917319:format=paste(sort(unique(r$resources$format)),collapse = ','))
1608806917327:return(api_desc)
1608806917331:}
1608806918597:# give selected metadata of apis with pivot.slug
1608806918606:ptable(myid) %>%
1608806918612:filter(language=='de') %>% t
1608806921400:# shows selected api data in a table
1608806921409:papi <- function(id, formats=c('CSV'), language='de') {
1608806921415:rest_api <- pshow(id)
1608806921421:stopifnot(rest_api$success)
1608806921432:as.na <- function(cell) {
1608806921437:ifelse(is.null(cell), NA, cell)
1608806921441:}
1608806921450:r <- filter(rest_api$result$resources, format %in% formats)
1608806921455:#return(r)
1608806921461:api_desc <- tibble(id=id,
1608806921467:issued=r$issued,
1608806921472:display_name=unlist(r$display_name[language]),
1608806921477:language=unlist(r$language),
1608806921482:created=r$created,
1608806921488:format=r$format,
1608806921494:rights=r$rights,
1608806921499:state=r$state,
1608806921505:url=r$url,
1608806921510:download_url=r$download_url,
1608806921515:revision_id=r$revision_id)
1608806921524:return(api_desc)
1608806921529:}
1608806922716:# give selected download urls of apis with pivot.slug
1608806922723:papi(myid)
1608806945591:# give selected download urls of apis with pivot.slug
1608806945598:papi(myid)[1]
1608806953970:# give selected download urls of apis with pivot.slug
1608806953978:papi(myid)[,1]
1608806964017:# give selected download urls of apis with pivot.slug
1608806964023:papi(myid)[1,]
1608807008091:# give selected download urls of apis with pivot.slug
1608807008099:y <- papi(myid)
1608807024582:unlist(y[1,])
1608807209412:file.path('data','ii', id)
1608807229608:file.path('data','ii', idlist)
1608807243301:# list of all apis
1608807243309:openlist <- jsonlite::fromJSON('https://opendata.swiss/api/3/action/package_list')
1608807244008:stopifnot(openlist$success)
1608807244755:# give list of all ids
1608807244762:pivot.slug <- "todesf.*lle.*alter.*kanton.*csv"
1608807246508:idlist <- openlist$result[grepl(pivot.slug, openlist$result)]
1608807247424:# download datasets (metadata and urls) by id (slug)
1608807247432:pdown <- function(id) {
1608807247439:myurl <- "https://opendata.swiss/api/3/action/package_show"
1608807247445:curl::curl_download(paste0(myurl,'?id=', id), id)
1608807247450:}
1608807251767:file.path('data','ii', idlist)
1608807378339:Sys.Date()
1608807397172:Sys.time()
1608807427624:file.path('data',Sys.Date(), idlist)
1608807500527:# download datasets (metadata and urls) by id (slug)
1608807500535:pdown <- function(id) {
1608807500542:myurl <- "https://opendata.swiss/api/3/action/package_show"
1608807500549:myfile <- file.path('data',Sys.Date(), id)
1608807500555:curl::curl_download(paste0(myurl,'?id=', id), myfile)
1608807500560:}
1608807502735:lapply(idlist, pdown)
1608807719774:dir.create('data')
1608807948249:# download datasets (metadata and urls) by id (slug)
1608807948256:pdown <- function(id) {
1608807948262:myurl <- "https://opendata.swiss/api/3/action/package_show"
1608807948271:if (!dir.exists('data')) dir.create('data')
1608807948276:if (!dir.exists(file.path('data',Sys.Date()))) dir.create(file.path('data',Sys.Date()))
1608807948281:myfile <- file.path('data',Sys.Date(), id)
1608807948290:curl::curl_download(paste0(myurl,'?id=', id), myfile)
1608807948295:}
1608807951514:lapply(idlist, pdown)
1608807981117:lapply(idlist, pdown)
1608808019341:lapply(idlist, pdown)
1608808113280:dir
1608808125032:library(dplyr)
1608808127089:myid <- 'todesfalle-nach-funf-jahres-altersgruppe-geschlecht-woche-und-kanton-csv-datei33'
1608808127571:myfile <- file.path('data',Sys.Date(), myid)
1608808180254:# shows one dataset by id (slug)
1608808180262:pshow <- function(id) {
1608808180271:res <- jsonlite::fromJSON(id)
1608808180277:stopifnot(res$success)
1608808180283:return(res)
1608808180288:}
1608808182618:# give all meta information of one api
1608808182626:pshow(myid)
1608808269387:myfile <- file.path('data', '2020-12-24', myid)
1608808280465:# give all meta information of one api
1608808280473:pshow(myid)
1608808570691:list.files(myfile)
1608808602575:list.files('data/2020-12-24')
1608808666389:list.files('data/2020-12-24', full.names = T)
1608808689472:# shows one dataset by id (slug)
1608808689479:pshow <- function(id) {
1608808689486:res <- jsonlite::fromJSON(id)
1608808689492:stopifnot(res$success)
1608808689498:return(res)
1608808689504:}
1608808691233:# give all meta information of one api
1608808691241:pshow(myid)
1608808791375:dir(myfile)
1608808804485:# give all meta information of one api
1608808804494:pshow(myfile)
1608808834220:# shows selected metadata in a table
1608808834229:ptable <- function(id) {
1608808834237:rest_api <- pshow(id)
1608808834244:stopifnot(rest_api$success)
1608808834254:as.na <- function(cell) {
1608808834260:ifelse(is.null(cell), NA, cell)
1608808834266:}
1608808834275:r <- rest_api$result
1608808834281:api_desc <- tibble(id=id,
1608808834287:issued=r$issued,
1608808834293:author=r$author,
1608808834299:language=r$language,
1608808834305:spatial=as.na(r$spatial),
1608808834311:metadata_created=r$metadata_created,
1608808834316:metadata_modified=r$metadata_modified,
1608808834321:start_date=as.na(r$temporals$start_date),
1608808834327:end_date=as.na(r$temporals$end_date),
1608808834332:display_name=r$display_name$de,
1608808834338:state=r$state,
1608808834344:format=paste(sort(unique(r$resources$format)),collapse = ','))
1608808834354:return(api_desc)
1608808834359:}
1608808838136:# give selected metadata of apis with pivot.slug
1608808838144:ptable(myid) %>%
1608808838152:filter(language=='de') %>% t
1608808855745:# give selected metadata of apis with pivot.slug
1608808855753:ptable(myfile) %>%
1608808855760:filter(language=='de') %>% t
1608808890488:# shows selected api data in a table
1608808890497:papi <- function(id, formats=c('CSV'), language='de') {
1608808890505:rest_api <- pshow(id)
1608808890512:stopifnot(rest_api$success)
1608808890522:as.na <- function(cell) {
1608808890528:ifelse(is.null(cell), NA, cell)
1608808890533:}
1608808890545:r <- filter(rest_api$result$resources, format %in% formats)
1608808890551:#return(r)
1608808890557:api_desc <- tibble(id=id,
1608808890563:issued=r$issued,
1608808890568:display_name=unlist(r$display_name[language]),
1608808890574:language=unlist(r$language),
1608808890579:created=r$created,
1608808890584:format=r$format,
1608808890590:rights=r$rights,
1608808890595:state=r$state,
1608808890600:url=r$url,
1608808890605:download_url=r$download_url,
1608808890610:revision_id=r$revision_id)
1608808890619:return(api_desc)
1608808890624:}
1608808892254:# give selected download urls of apis with pivot.slug
1608808892261:y <- papi(myfile)
1608808894694:unlist(y[1,])
